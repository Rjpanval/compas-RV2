name: Release

on:
  push:
    tags:
      - 'v*'

jobs:

  Release:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: True
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  InstallerWin:
    needs: Release
    runs-on: "windows-latest"
    steps:
      - name: Get the tag version
        uses: dawidd6/action-get-tag@v1
        id: tagName

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          miniconda-version: "latest"
          activate-environment: rv2
          python-version: 3.7

      - name: conda-install
        shell: PowerShell
        run: |
          conda install conda-pack cython -y

      - name: build-front-page
        run: |
          cd src/compas_rv2/web
          npm install
          npm run build

      - name: rv2-install
        run: |
          python scripts/unzip_electron.py
          python src/compas_rv2/ui/Rhino/RV2/dev/rui.py
          Set-Content -Path MANIFEST.in -Value (get-content -Path MANIFEST.in | Select-String -Pattern 'prune src/compas_rv2/web' -NotMatch)
          pip install .

      - name: rv2-pack
        run: |
          python scripts/pack.py --version ${{ steps.tagName.outputs.tag }}

      - name: Check out compas_installer
        uses: actions/checkout@main
        with:
          repository: BlockResearchGroup/compas_installer
          path: compas_installer

      - name: wrap installer
        run: |
          cd compas_installer
          npm install
          copy ../dist/RV2_${{ steps.tagName.outputs.tag }}.zip src/plugins/RV2.zip
          npm run build

      - name: Upload Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.outputs.upload_url }}
          asset_path: compas_installer/dist/RhinoVault2 Setup 0.0.1.exe
          asset_name: RhinoVault2_${{ steps.tagName.outputs.tag }}.exe
          asset_content_type: application/octet-stream

      - name: Upload Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.outputs.upload_url }}
          asset_path: compas_installer/src/plugins/RV2.zip
          asset_name: RhinoVault2_${{ steps.tagName.outputs.tag }}.zip
          asset_content_type: application/zip

  InstallerMac:
    needs: Release
    runs-on: "macos-latest"
    steps:
      - name: Get the tag version
        uses: dawidd6/action-get-tag@v1
        id: tagName

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          miniconda-version: "latest"
          activate-environment: rv2
          python-version: 3.7

      - name: conda-install
        shell: bash -l {0}
        run: |
          conda install conda-pack cython -y

      - name: build-front-page
        shell: bash -l {0}
        run: |
          cd src/compas_rv2/web
          npm install
          npm run build

      - name: rv2-install
        shell: bash -l {0}
        run: |
          python scripts/unzip_electron.py
          python src/compas_rv2/ui/Rhino/RV2/dev/rui.py
          sed -i '' '/prune src\/compas_rv2\/web/d' ./MANIFEST.in
          pip install .

      - name: rv2-pack
        shell: bash -l {0}
        run: |
          python scripts/pack.py --version ${{ steps.tagName.outputs.tag }}

      - name: Upload Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.outputs.upload_url }}
          asset_path: dist/RV2_${{ steps.tagName.outputs.tag }}.zip
          asset_name: RhinoVault2_${{ steps.tagName.outputs.tag }}_mac.zip
          asset_content_type: application/zip

  # Publish:

  #   needs: Installer

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.x'
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install setuptools wheel twine
  #   - name: Build and publish
  #     env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI }}
  #     run: |
  #       python setup.py sdist bdist_wheel
  #       twine upload --verbose dist/*